// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(DBDemoDbContext))]
    [Migration("20230918173955_Gp")]
    partial class Gp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6aab3d8a-31b4-4590-82f3-820812bded5f"),
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("83ce1cec-78c3-4703-975a-cb1b9a1cc176"),
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("1e77f8b3-1c4d-4622-97a7-8c2b47ef2e26"),
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("83a2c0a1-2761-4244-bf87-5ce4393c3ade"),
                            Name = "Angola"
                        },
                        new
                        {
                            Id = new Guid("1da2fa81-8f67-4492-91a0-6d511895fbcc"),
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("Entities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecieveNewsLetters")
                        .HasColumnType("bit");

                    b.HasKey("PersonId");

                    b.ToTable("People", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = new Guid("f60277bc-d984-43b6-9953-63285d04f5b1"),
                            Address = "12 mario street",
                            DateOfBirth = new DateTime(2003, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mario247@gmail.com",
                            Gender = "Male",
                            Name = "Mario",
                            RecieveNewsLetters = true
                        },
                        new
                        {
                            PersonId = new Guid("0db3e5f3-b610-4af5-b314-0fa9763e68fd"),
                            Address = "24 Ajebo street",
                            DateOfBirth = new DateTime(1997, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "James.catch@gmail.com",
                            Gender = "Male",
                            Name = "James",
                            RecieveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("9c6958ef-b34a-41e6-8596-5122b27979a3"),
                            Address = "15 Elon street",
                            DateOfBirth = new DateTime(2013, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Davina.agile@gmail.com",
                            Gender = "Female",
                            Name = "Davina",
                            RecieveNewsLetters = false
                        },
                        new
                        {
                            PersonId = new Guid("93f16a89-6ee0-482f-ba0a-8431f1a31de6"),
                            Address = "16 mavin street",
                            DateOfBirth = new DateTime(1999, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucifer.dot@gmail.com",
                            Gender = "Male",
                            Name = "Lucifer",
                            RecieveNewsLetters = true
                        },
                        new
                        {
                            PersonId = new Guid("2b5a85e3-de43-48a8-8fde-8b62b367c428"),
                            Address = "17 cyber street",
                            DateOfBirth = new DateTime(2002, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Jack34@gmail.com",
                            Gender = "Male",
                            Name = "Jack",
                            RecieveNewsLetters = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
